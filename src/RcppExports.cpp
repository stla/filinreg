// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// test
double test(double x);
RcppExport SEXP _filinreg_test(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(test(x));
    return rcpp_result_gen;
END_RCPP
}
// f_normal
Rcpp::List f_normal(const Eigen::MatrixXd& centers, const Eigen::MatrixXd& XI, const Eigen::MatrixXd& XmI, const Eigen::VectorXd& yI, const Eigen::VectorXd& ymI, const size_t M, const size_t n);
RcppExport SEXP _filinreg_f_normal(SEXP centersSEXP, SEXP XISEXP, SEXP XmISEXP, SEXP yISEXP, SEXP ymISEXP, SEXP MSEXP, SEXP nSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type centers(centersSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type XI(XISEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type XmI(XmISEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type yI(yISEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type ymI(ymISEXP);
    Rcpp::traits::input_parameter< const size_t >::type M(MSEXP);
    Rcpp::traits::input_parameter< const size_t >::type n(nSEXP);
    rcpp_result_gen = Rcpp::wrap(f_normal(centers, XI, XmI, yI, ymI, M, n));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_filinreg_test", (DL_FUNC) &_filinreg_test, 1},
    {"_filinreg_f_normal", (DL_FUNC) &_filinreg_f_normal, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_filinreg(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
